import { Validation,Approver, MultidayCost } from "../../../models/props";
import {IRefObject,ITextField,Label,PrimaryButton} from 'office-ui-fabric-react/lib';

export interface IReqData{
    formKey:string;
    employeeId:number;
    employeeName:string;
    employeeLogin:string;
    agency: string;
    personnelNo:string;
    costCenter:string;
    domicile:string;
    taNo:string;
    departureDate?:Date;
    departureTime:string;
    departureDateStr:string;
    returnDate?:Date;
    returnTime:string;
    returnDateStr:string;
    fund:string;
    dateOfRequest:Date;
    fYBudget?:string;
    amtRemainBudget?:string;
    amtRemainingAfterThis?:string;
    authBudget?:string;
    gL:string;
    sMAGL:string;
    fySpecialMarketing?:string;
    fySpecialMarketingamtRemaining?:string;
    fySpecialMarketingamtRemainingAfterThis?:string;
    fYBudgetFY2?:string;
    amtRemainBudgetFY2?:string;
    amtRemainingAfterThisFY2?:string;
    authBudgetFY2?:string;
    fySpecialMarketingFY2?:string;
    fySpecialMarketingamtRemainingFY2?:string;
    fySpecialMarketingamtRemainingAfterThisFY2?:string;
    destination:string;
    status: string;
    stage: string;
  
    nextApprover?:number;
    requestLog: string;
    purposeOfTrip: string;
    benefitToState: string;
    airTravelAgencyUsed: string;
    airTravelAgencyUsedJustification: string;
    airFare: string;
    airFareCost?:string;
    vehicleType: string;
    mileageEstimation?:number;
    mileageRate?:number;
    mileageAmount?:string;
    vehiclePassengers: string;
    vehicleRentalTypeIsCompact: string;
    vehicleRentalJustificationChoice: string;
    vehicleRentalJustificationText: string;
    vehicleRentalCost?:string;
    limoTaxi: string;
    limoTaxiFareAmount?:string;
    tollsAndParking: string;
    tollsAndParkingAmount?:string;
    totalTransportationExpense?:string;
    lodging:MultidayCost[];
    totalLodgingAmount?:string;
    meals:MultidayCost[];
    totalMealAmount?:string;
    tips: string;
    tipsAmount?:string;
    otherExpensePayableTo: string;
    otherExpensePaymentMethod: string;
    otherExpenseDueDate: string;
    otherExpenseAmount?:string;
    totalEstimatedTravelAmount?:string;
    specialMarketingActivitiesAmountNotes: string;
    specialMarketingActivitiesAmount?:string;
    totalEstimatedCostOfTrip?:string;
    travelAdvanceDate: string;
    travelAdvanceAmount?:string;
    chbxVehicleRental: boolean;
    chbxGPSRentalVehicle: boolean;
    chbxProspectInSameHotelAsEmployee: boolean;
    chbxSpecialMarketingActivities: boolean;
    chbx50pctLodgingException: boolean;
    chbxOther: boolean;
    OtherExplanation: string;
    chbxVehicleRentalSig: string;
    chbxGPSRentalVehicleSig: string;
    chbxProspectInSameHotelAsEmployeeSig: string;
    chbxSpecialMarketingActivitiesSig: string;
    chbx50pctLodgingExceptionSig: string;
    chbxOtherSig: string;

    EstimatedCompensatoryTime: string;
    
    employeeApproval: Approver;
    sectionHead?: Approver;
    secretary?: Approver;
    undersecretary?: Approver;
    deputyUndersecretary?: Approver;
    budget?: Approver;
    acctmgr1?: Approver;
    acctmgr2?: Approver;
    acctAdmin?: Approver;
    budgetYear1?:number;
    budgetYear2?:number;
}
export interface ITravelRequestState {
    error: boolean;
    message: string;
    results:any[];
    validations: Validation[];
    textInput:IRefObject<ITextField>;    
    AddingAttachment:boolean;
    Attachments: any[];
    reqData:IReqData;
    kickoffFLOW: string;
    
    hideDialog: boolean;
    dialogTitle: string;
    dialogText: string;
    requestID: string;
    formMode: string;
    saving: boolean;
    printing: boolean;
    DepartureDateError?: string;
    ReturnDateError?: string;

    
}
